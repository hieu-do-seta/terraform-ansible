# infra-ansible/ansible/deploy.yml
---
- hosts: app
  become: yes
  vars:
    app_dir: /opt/myapp
    registry: "{{ registry }}"
    image_tag: "{{ image_tag }}"

  tasks:
    - name: Load environment variables from .env
      include_vars:
        file: "{{ app_dir }}/.env"
        sep: "="
        strip_quotes: yes
        name: app_env

    - name: Check for .env file existence
      stat:
        path: "{{ app_dir }}/.env"
      register: env_file_stat

    - name: Fail if .env is missing or unreadable
      fail:
        msg: "File {{ app_dir }}/.env not found or not readable!"
      when: not (env_file_stat.stat.exists and env_file_stat.stat.readable)

    - name: Ensure Docker and pip are installed
      apt:
        name:
          - docker.io
          - python3-pip
        update_cache: yes

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install Docker SDK for Python
      pip:
        name: docker

    - name: Remove existing backend container
      docker_container:
        name: backend
        state: absent

    - name: Pull backend image
      docker_image:
        name: "{{ registry }}/backend"
        tag: "{{ image_tag }}"
        source: pull

    - name: Run backend container
      docker_container:
        name: backend
        image: "{{ registry }}/backend:{{ image_tag }}"
        env: "{{ app_env }}"
        ports:
          - "3000:3000"
        recreate: yes
        state: started
        restart_policy: unless-stopped

    - name: Remove existing frontend container
      docker_container:
        name: frontend
        state: absent

    - name: Pull frontend image
      docker_image:
        name: "{{ registry }}/frontend"
        tag: "{{ image_tag }}"
        source: pull

    - name: Run frontend container
      docker_container:
        name: frontend
        image: "{{ registry }}/frontend:{{ image_tag }}"
        env: "{{ app_env }}"
        ports:
          - "80:80"
        recreate: yes
        state: started
        restart_policy: unless-stopped
