---
- hosts: app
  become: yes
  vars:
    app_dir: /opt/myapp        # Giữ nguyên với đường dẫn bootstrap
    registry: "{{ registry }}"
    image_tag: "{{ image_tag }}"

  tasks:
    # 1. Kiểm tra file .env
    - name: Kiểm tra tồn tại file .env
      stat:
        path: "{{ app_dir }}/.env"
      register: env_file

    - name: Báo lỗi nếu .env không tìm thấy
      fail:
        msg: "File {{ app_dir }}/.env không tồn tại trên server!"
      when: not env_file.stat.exists

    # 2. Đảm bảo Docker & pip đã cài
    - name: Cài Docker và pip nếu chưa có
      apt:
        name:
          - docker.io
          - python3-pip
        update_cache: yes

    - name: Đảm bảo Docker service đang chạy
      service:
        name: docker
        state: started
        enabled: yes

    - name: Cài Docker SDK cho Python
      pip:
        name: docker

    # 3. Xóa container cũ, kéo image mới và khởi container
    - name: Xóa container backend cũ (nếu có)
      docker_container:
        name: backend
        state: absent

    - name: Pull backend image
      docker_image:
        name: "{{ registry }}/backend"
        tag: "{{ image_tag }}"
        source: pull

    - name: Chạy lại backend container
      docker_container:
        name: backend
        image: "{{ registry }}/backend:{{ image_tag }}"
        env_file: "{{ app_dir }}/.env"
        ports:
          - "3000:3000"
        state: started
        restart_policy: unless-stopped
        recreate: yes

    - name: Xóa container frontend cũ (nếu có)
      docker_container:
        name: frontend
        state: absent

    - name: Pull frontend image
      docker_image:
        name: "{{ registry }}/frontend"
        tag: "{{ image_tag }}"
        source: pull

    - name: Chạy lại frontend container
      docker_container:
        name: frontend
        image: "{{ registry }}/frontend:{{ image_tag }}"
        env_file: "{{ app_dir }}/.env"
        ports:
          - "80:80"
        state: started
        restart_policy: unless-stopped
        recreate: yes
