---

- hosts: app
  become: yes
  collections:
    - community.docker
  vars:
    registry: "{{ registry }}"
    image_tag: "{{ image_tag }}"
    github_actor: "{{ github_actor }}"
    github_token: "{{ github_token }}"
  tasks:
    - name: Docker login GHCR
      community.docker.docker_login:
        registry_url: ghcr.io
        username: "{{ github_actor }}"
        password: "{{ github_token }}"

    - name: Pull backend image
      community.docker.docker_image:
        name: "{{ registry }}/backend"
        tag: "{{ image_tag }}"
        source: pull

    - name: Run backend container
      community.docker.docker_container:
        name: backend
        image: "{{ registry }}/backend:{{ image_tag }}"
        env_file: /opt/myapp/.env
        ports:
          - "3000:3000"
        restart_policy: unless-stopped
        recreate: yes

- hosts: frontend
  become: yes
  collections:
    - community.docker
  vars:
    registry: "{{ registry }}"
    image_tag: "{{ image_tag }}"
    github_actor: "{{ github_actor }}"
    github_token: "{{ github_token }}"
  tasks:
    - name: Docker login GHCR
      community.docker.docker_login:
        registry_url: ghcr.io
        username: "{{ github_actor }}"
        password: "{{ github_token }}"

    - name: Pull frontend image
      community.docker.docker_image:
        name: "{{ registry }}/frontend"
        tag: "{{ image_tag }}"
        source: pull

    - name: Run frontend container
      community.docker.docker_container:
        name: frontend
        image: "{{ registry }}/frontend:{{ image_tag }}"
        state: started
        published_ports:
          - "80:80"
        restart_policy: unless-stopped
        recreate: yes
