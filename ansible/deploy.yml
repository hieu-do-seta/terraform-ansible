---
- hosts: app
  become: yes
  vars:
    app_dir: /opt/myapp
    registry: "{{ registry }}"
    image_tag: "{{ image_tag }}"

  tasks:
    - name: Ensure Docker & pip are installed
      apt:
        name:
          - docker.io
          - python3-pip
        update_cache: yes

    - name: Install Docker SDK for Python
      pip:
        name: docker

    - name: Login to GitHub Container Registry
      docker_login:
        registry_url: ghcr.io
        username: "{{ lookup('env','GITHUB_ACTOR') }}"
        password: "{{ lookup('env','GITHUB_TOKEN') }}"

    - name: Stat .env file
      stat:
        path: "{{ app_dir }}/.env"
      register: env_file_stat

    - name: Fail if .env is missing or unreadable
      fail:
        msg: "File {{ app_dir }}/.env not found or not readable!"
      when: not (env_file_stat.stat.exists and env_file_stat.stat.readable)

    - name: Pull backend image (amd64)
      shell: docker pull --platform linux/amd64 {{ registry }}/backend:{{ image_tag }}
      args:
        warn: false

    - name: Remove existing backend container (ignore if none)
      shell: docker rm -f backend
      ignore_errors: true

    - name: Run backend container (amd64)
      shell: >
        docker run -d
          --platform linux/amd64
          --name backend
          --env-file {{ app_dir }}/.env
          -p 3000:3000
          {{ registry }}/backend:{{ image_tag }}
      args:
        warn: false

    # - name: Pull frontend image (amd64)
    #   shell: docker pull --platform linux/amd64 {{ registry }}/frontend:{{ image_tag }}
    #   args:
    #     warn: false

    # - name: Remove existing frontend container (ignore if none)
    #   shell: docker rm -f frontend
    #   ignore_errors: true

    # - name: Run frontend container (amd64)
    #   shell: >
    #     docker run -d
    #       --platform linux/amd64
    #       --name frontend
    #       --env-file {{ app_dir }}/.env
    #       -p 80:80
    #       {{ registry }}/frontend:{{ image_tag }}
    #   args:
    #     warn: false
