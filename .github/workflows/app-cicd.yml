name: App CI/CD

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GHCR
        run: |
          echo ">> GHCR login as ${{ github.actor }}"
          echo "${{ secrets.GITHUB_TOKEN }}" \
            | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker info
          docker version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push Backend (amd64 + arm64)
        uses: docker/build-push-action@v5
        with:
          context: code/backend
          file: code/backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/backend:latest
      - name: Debug pushed images
        run: |
          echo ">> Images on GHCR:"
          gh api \
            /repos/${{ github.repository }}/packages/container/backend/versions \
            --jq '.[].metadata.container.tags[]'

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infra-ansible
        uses: actions/checkout@v3
        with:
          path: infra-ansible

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PROD_KEY }}" > ~/.ssh/prod-key.pem
          chmod 600 ~/.ssh/prod-key.pem

      - name: Tạo SSH config với ProxyJump
        run: |
          cat >> ~/.ssh/config <<EOF
          Host bastion
            HostName ${{ secrets.BASTION_IP }}
            User ubuntu
            IdentityFile ~/.ssh/prod-key.pem
            StrictHostKeyChecking no

          Host app-server
            HostName ${{ secrets.SERVER_IP }}
            User ubuntu
            IdentityFile ~/.ssh/prod-key.pem
            ProxyJump bastion
            StrictHostKeyChecking no
          EOF
          chmod 600 ~/.ssh/config

      - name: Sinh inventory.ini
        run: |
          echo "[app]" > infra-ansible/ansible/inventory.ini
          echo "app-server ansible_user=ubuntu" >> infra-ansible/ansible/inventory.ini
          echo ">> Inventory:" && cat infra-ansible/ansible/inventory.ini

      - name: Debug GHCR & ENV vars
        run: |
          echo ">> registry = ghcr.io/${{ github.repository }}"
          echo ">> image_tag = ${{ needs.build_and_push.outputs.image_tag }}"
          echo ">> GITHUB_ACTOR = ${{ github.actor }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Ansible bootstrap (tạo .env & chuẩn bị host)
        run: |
          ansible-playbook \
            -vvv \
            -i infra-ansible/ansible/inventory.ini \
            --private-key ~/.ssh/prod-key.pem \
            -b infra-ansible/ansible/bootstrap.yml

      - name: Run Ansible deploy
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io/${{ github.repository }}
          image_tag: ${{ needs.build_and_push.outputs.image_tag }}
        run: |
          echo ">>> Invoking deploy playbook..."
          echo "Extra-vars: registry=${registry}, image_tag=${image_tag}, github_actor=${GITHUB_ACTOR}"
          ansible-playbook \
            -vvv \
            -i infra-ansible/ansible/inventory.ini \
            --private-key ~/.ssh/prod-key.pem \
            -b \
            --extra-vars "registry=${registry} image_tag=${image_tag} github_actor=${GITHUB_ACTOR} github_token=${GITHUB_TOKEN}" \
            infra-ansible/ansible/deploy.yml
